{"version":3,"sources":["components/Header.js","components/Buttons.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","children","Button","handleMenuClick","bind","handleContactClick","handleHomeClick","this","onIsMenuClickedChange","onIsContactClickedChange","onIsHomeClickedChange","onContactClick","onMenuClick","onHomeClick","React","Component","Home","state","isOpened","homeClickHandler","onClick","Menu","menuClickHandler","Contact","contactClickHandler","App","handleIsMenuClickedChange","handleIsContactClickedChange","handleIsHomeClickedChange","isMenuClicked","isHomeClicked","isContactClicked","currentState","setState","menuStyle","display","menuStyleActive","Buttons","style","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.711afb76.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(props) {\n  return (   \n    <div className=\"content\">\n        {props.children}\n    </div>   \n  )\n}\n\nexport default Header;","import React from 'react';\n\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleMenuClick = this.handleMenuClick.bind(this);\n    this.handleContactClick = this.handleContactClick.bind(this);\n    this.handleHomeClick = this.handleHomeClick.bind(this);\n  }\n\n\n  handleMenuClick() {\n    this.props.onIsMenuClickedChange();\n  }\n  handleContactClick() {\n    this.props.onIsContactClickedChange();\n  }\n  handleHomeClick() {\n    this.props.onIsHomeClickedChange();\n  }\n\n  render() {\n\n    return (\n      <div className='tab-bar'>\n        <Contact onContactClick={this.handleContactClick}/>\n        <Menu onMenuClick={this.handleMenuClick}/>\n        <Home onHomeClick={this.handleHomeClick}/>      \n      </div>\n    )\n  }\n}\n\nclass Home extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {isOpened: false};\n    this.homeClickHandler = this.homeClickHandler.bind(this);\n  }\n  \n  homeClickHandler() {\n    this.props.onHomeClick();    \n  }\n  \n  render() {\n    return(\n      <button className='btnNav' onClick={this.homeClickHandler}>Home</button>    \n    )\n  }    \n}\nclass Menu extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {isOpened: false};\n    this.menuClickHandler = this.menuClickHandler.bind(this);\n  }\n  \n  menuClickHandler() {\n    this.props.onMenuClick();    \n  }\n  \n  render() {\n    return(\n      <button className='btnNav' onClick={this.menuClickHandler}>Menu</button>    \n    )\n  }    \n}\nclass Contact extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {isOpened: false};\n    this.contactClickHandler = this.contactClickHandler.bind(this);\n  }\n  \n  contactClickHandler() {\n    this.props.onContactClick();    \n  }\n  \n  render() {\n    return(\n      <button className='btnNav' onClick={this.contactClickHandler}>Contact</button>    \n    )\n  }    \n}\n\n\n\n\nexport default Button;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Buttons from './components/Buttons';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleIsMenuClickedChange = this.handleIsMenuClickedChange.bind(this);\n    this.handleIsContactClickedChange = this.handleIsContactClickedChange.bind(this);\n    this.handleIsHomeClickedChange = this.handleIsHomeClickedChange.bind(this);\n    this.state = {\n      isMenuClicked: false,\n      isHomeClicked: false,\n      isContactClicked: false,\n    }\n  }\n\n  handleIsMenuClickedChange() {\n    const currentState = this.state.isMenuClicked;\n    this.setState({\n      isMenuClicked: !currentState,\n      isHomeClicked: false,\n      isContactClicked: false,\n    });\n  }\n  handleIsContactClickedChange() {\n    const currentState = this.state.isContactClicked;\n    this.setState({\n      isContactClicked: !currentState,\n      isHomeClicked: false,\n      isMenuClicked: false,\n    });    \n  }\n  handleIsHomeClickedChange() {\n    const currentState = this.state.isHomeClicked;\n    this.setState({\n      isHomeClicked: !currentState,\n      isMenuClicked: false,\n      isContactClicked: false,\n    });\n  }\n\n  render() {\n    const isMenuClicked = this.state.isMenuClicked;\n    const isContactClicked = this.state.isContactClicked;\n    const menuStyle = {\n      display: 'none',\n    }\n    const menuStyleActive = {\n      display: 'block',\n      \n    }\n    return (\n      \n      <div className='App'>      \n        <div className=\"tab-color\"></div>\n        <Buttons \n          onIsMenuClickedChange={this.handleIsMenuClickedChange}\n          onIsContactClickedChange={this.handleIsContactClickedChange}\n          onIsHomeClickedChange={this.handleIsHomeClickedChange}\n        />\n        \n        <div className='menu' style={isMenuClicked ? menuStyleActive : menuStyle}></div>\n        \n        <div className={(isMenuClicked || isContactClicked) ? 'blurred' : 'bgg'}></div> \n        \n        <Header>\n          <h1 className=\"header\">0xtaf's Restaurant</h1>\n          <p className={(isMenuClicked || isContactClicked) ? 'clearIntro' : 'intro'}>Inspired React Cuisine</p>\n        </Header>  \n\n        <div className={(isMenuClicked || isContactClicked) ? 'colorless' : 'color'}></div> \n        <div className=\"contact\" style={isContactClicked ? menuStyleActive : menuStyle}>\n          <h1 className=\"contact1\">DROP ME A MESSAGE</h1>\n          <p className=\"contact2\">Let me know if you'd like to share any opinions or suggestions.</p>\n          <h1 className=\"contact3\">EMAIL</h1>\n          <p className=\"contact4\">tayfunsur@gmail.com</p>\n          <h1 className=\"contact5\">GITHUB</h1>\n          <a href=\"http://github.com/0xtaf\" className=\"contact6\">http://github.com/0xtaf</a>\n          <h1 className=\"contact7\">TWITTER</h1>\n          <a href=\"https://twitter.com/OdbTayfun\" className=\"contact8\">https://twitter.com/OdbTayfun</a>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}